apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'com.zeroturnaround.jrebel.android'

final isTravis = "true".equals(System.getenv("TRAVIS"))

android {
  compileSdkVersion targetSdk
  buildToolsVersion buildTools

  defaultConfig {
    applicationId "adeln.boilerplate"

    minSdkVersion minSdk
    targetSdkVersion targetSdk

    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }

  kapt {
    generateStubs = true
  }

  dexOptions {
    preDexLibraries = !isTravis
  }

  lintOptions {
    textReport true
    textOutput "stdout"
    disable "InvalidPackage"
  }
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  compile supportDependencies.appCompat

  // okio stack
  compile "com.squareup.retrofit:retrofit:2.0.0-beta2"
  compile 'com.squareup.moshi:moshi:1.0.0'

  testCompile "junit:junit:4.12"
  testCompile "org.robolectric:robolectric:3.0"
  testCompile "com.squareup.assertj:assertj-android:1.1.0"

  androidTestCompile supportTestDependencies.rules
  androidTestCompile supportTestDependencies.espresso
}

// these are for suppressing gradle warnings
configurations {
  testCompile.exclude module: "support-annotations"
  androidTestCompile.exclude module: "support-annotations"
}

final testTask = "connectedDebugAndroidTest"
task testUi(dependsOn: testTask)

// The default 'assemble' task only applies to normal variants. Add test variants as well.
final assembleTask = tasks.getByName('assemble')
android.testVariants.all { variant ->
  assembleTask.dependsOn variant.assemble
}